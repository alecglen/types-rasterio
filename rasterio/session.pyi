from rasterio.path import UnparsedPath as UnparsedPath, parse_path as parse_path
from typing import Any

log: Any

class Session:
    @classmethod
    def hascreds(cls, config): ...
    def get_credential_options(self): ...
    @staticmethod
    def from_foreign_session(session, cls: Any | None = ...): ...
    @staticmethod
    def cls_from_path(path): ...
    @staticmethod
    def from_path(path, *args, **kwargs): ...
    @staticmethod
    def aws_or_dummy(*args, **kwargs): ...
    @staticmethod
    def from_environ(*args, **kwargs): ...

class DummySession(Session):
    credentials: Any
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def hascreds(cls, config): ...
    def get_credential_options(self): ...

class AWSSession(Session):
    requester_pays: Any
    unsigned: Any
    endpoint_url: Any
    def __init__(self, session: Any | None = ..., aws_unsigned: bool = ..., aws_access_key_id: Any | None = ..., aws_secret_access_key: Any | None = ..., aws_session_token: Any | None = ..., region_name: Any | None = ..., profile_name: Any | None = ..., endpoint_url: Any | None = ..., requester_pays: bool = ...) -> None: ...
    @classmethod
    def hascreds(cls, config): ...
    @property
    def credentials(self): ...
    def get_credential_options(self): ...

class OSSSession(Session):
    def __init__(self, oss_access_key_id: Any | None = ..., oss_secret_access_key: Any | None = ..., oss_endpoint: Any | None = ...) -> None: ...
    @classmethod
    def hascreds(cls, config): ...
    @property
    def credentials(self): ...
    def get_credential_options(self): ...

class GSSession(Session):
    def __init__(self, google_application_credentials: Any | None = ...) -> None: ...
    @classmethod
    def hascreds(cls, config): ...
    @property
    def credentials(self): ...
    def get_credential_options(self): ...

class SwiftSession(Session):
    def __init__(self, session: Any | None = ..., swift_storage_url: Any | None = ..., swift_auth_token: Any | None = ..., swift_auth_v1_url: Any | None = ..., swift_user: Any | None = ..., swift_key: Any | None = ...) -> None: ...
    @classmethod
    def hascreds(cls, config): ...
    @property
    def credentials(self): ...
    def get_credential_options(self): ...

class AzureSession(Session):
    unsigned: Any
    storage_account: Any
    def __init__(self, azure_storage_connection_string: Any | None = ..., azure_storage_account: Any | None = ..., azure_storage_access_key: Any | None = ..., azure_unsigned: bool = ...) -> None: ...
    @classmethod
    def hascreds(cls, config): ...
    @property
    def credentials(self): ...
    def get_credential_options(self): ...
